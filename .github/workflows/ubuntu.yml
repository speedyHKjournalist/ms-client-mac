name: Ubuntu

on:
  push:
    paths-ignore:
    - 'docs/**'
    - '**.md'
    branches: [master, dev, dev/**, refactor]
  pull_request:
    paths-ignore:
    - 'docs/**'
    - '**.md'
    branches: [master, dev, dev/**, refactor]
    
env:
  BUILD_TYPE: Release
  INSTALL_LOCATION: ${{github.workspace}}/installed
  ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

jobs:
  build:
    
    name: ${{ matrix.config.os }}-${{ matrix.config.compiler }}-${{ matrix.config.version }}
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-latest
            compiler: gcc
            cc: gcc-9
            cxx: g++-9
            version: "9.3.0"

          - os: ubuntu-latest
            compiler: gcc
            cc: gcc-10
            cxx: g++-10
            version: "10"

          - os: ubuntu-latest
            compiler: clang
            cc: clang-10
            cxx: clang++-10
            version: "10"

    steps:
    - uses: actions/checkout@v2
      
    - name: Cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: ${{env.INSTALL_LOCATION}}
        key: ${{runner.os}}-dependencies

    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v1

    - name: Clang
      if: matrix.config.compiler == 'clang'
      run: |
        sudo apt-get update
        sudo apt-get install clang-10
        
    - name: Install Bass
      run: |
        cd thirdparty
        git clone https://github.com/filoper/bass24.git
        cp -r bass24/bass24-linux .

    - name: Install lz4
      run: sudo apt-get install liblz4-dev

    - name: Install glfw
      run: sudo apt-get install libglfw3-dev

    - name: Install GoogleTest
      run: |
        cd thirdparty
       # git clone https://github.com/google/googletest.git --branch release-1.10.0
       # cd googletest
       # cmake -Bbuild -GNinja -DCMAKE_C_COMPILER=${{ matrix.config.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} -DCMAKE_INSTALL_PREFIX=$INSTALL_LOCATION
       # cmake --build build --config $BUILD_TYPE
       # cmake --build build --target install --config $BUILD_TYPE

    - name: Configure
      run: cmake -Bbuild -GNinja -DCMAKE_C_COMPILER=${{ matrix.config.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} -DCMAKE_PREFIX_PATH=$INSTALL_LOCATION -DCMAKE_INSTALL_PREFIX=$INSTALL_LOCATION -DENABLE_CODE_COVERAGE=1 -DBOOST_ROOT=$BOOST_ROOT_1_72_0
    
    - name: Build
      run: | 
        cmake --build build --config $BUILD_TYPE
        cmake --install build --config $BUILD_TYPE

    - name: Run tests
      run: |
        cd build
        ctest -C $BUILD_TYPE -VV

    - name: Code coverage using Codecov
      if: runner.os == 'Linux'
      run: bash <(curl -s https://codecov.io/bash)

    - uses: actions/upload-artifact@v2
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      with:
        name: msclient-linux
        path: |
          ${{github.workspace}}/installed/bin/
